======================
2-matrix_divided
======================

Matrix divided module this module is the the unit test for
the matrix_divided function. Divides all elements of a matrix

=====================

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

It also works with the main matrix

::

    >>> matrix = [
    ...     [2, 4, 6],
    ...     [12, 24, 48]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.67, 1.33, 2.0], [4.0, 8.0, 16.0]]

It also works with the original matrix

::

    >>> matrix = [
    ...     [2, 4, 6],
    ...     [2.4, 3.7, 25.4]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.67, 1.33, 2.0], [0.8, 1.23, 8.47]]

It also works with floats

::

    >>> matrix = [
    ...     [3.2, 5.6, 9.9],
    ...     [1.4, 6.7, 15.4]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[1.07, 1.87, 3.3], [0.47, 2.23, 5.13]]

TypeError matrix is not a list

::

    >>> matrix = "not a list"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

TypeError matrix is empty

::

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

It also works with a empty list of list

::

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

TypeError matrix only one empty list

::

    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

TypeError matrix is not the same size

::

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

TypeError matrix contains only a list

::


    >>> matrix = [1, 3, 5]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

TypeError there is one element that is not an integer or a float

::

    >>> matrix = [
    ...     [1, "text", 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

TypeError the divisior is not an integer or a float

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "text"))
    Traceback (most recent call last):
    TypeError: div must be a number

TypeError the divisior has a None value

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

TypeError the divisior is not an integer or a float

::
